
@{
    ViewBag.Title = "Melbourne";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Geelong</h2>

<html>
<head>

    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
         /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
         #map {
              height: 50%;
         }
         
    </style>

</head>
<body>

    @section Scripts {

        <div class="row">

            <div class="col-md-2"></div>
            <div id="map1" class="col-md-5" style="height: 300px"></div>
            <div class="col-md-2"></div>
            <div class="col-md-2"></div>
            <div class="col-md-2"></div>
            <div class="col-md-2"></div>
        </div>

        <div class="row">

            <div class="col-md-2"></div>
            <div class="col-md-5">


            </div>
            <div class="col-md-2"></div>
            <div class="col-md-2"></div>
            <div class="col-md-2"></div>
            <div class="col-md-2"></div>
        </div>





        <script>
            // This example requires the Places library. Include the libraries=places
            // parameter when you first load the API. For example:
            // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

            var map;
            var service;
            var infowindow;

            function initMap() {
                var melbourne = new google.maps.LatLng(-37.8136, 144.9631);


                 var melbranch = new google.maps.LatLng(-37.825549, 144.957662);
 var frabranch = new google.maps.LatLng(-38.148467,145.120608);
 var geebranch = new google.maps.LatLng(-38.144931, 144.360412);


                infowindow = new google.maps.InfoWindow();

                map = new google.maps.Map(
                    document.getElementById('map'), { center: melbourne, zoom: 15 });
var request = {
    location: geebranch,
    radius: 500,
    types: ['cafe']
  };

                service = new google.maps.places.PlacesService(map);

                service.nearbySearch (request, function (results, status) {
                    if (status === google.maps.places.PlacesServiceStatus.OK) {
                        for (var i = 0; i < results.length; i++) {
                            createMarker(results[i]);
                        }

                        map.setCenter(results[0].geometry.location);
                    }
                });
            }

            function createMarker(place) {
                var marker = new google.maps.Marker({
                    map: map,
                    position: place.geometry.location
                });

                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.setContent(place.name);
                    infowindow.open(map, this);
                });
            }
        </script>









    }


    <div id="map" class="col-md-10" style="height: 500px"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCPKMXivFGElU_HkZLstosNCRUp3HWwiL4&libraries=places&callback=initMap" async defer></script>


</body>
</html>